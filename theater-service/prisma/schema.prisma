model Theater {
  id        String   @id @default(uuid())
  name      String
  location  String
  screens   Screen[]
  shows     Show[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Screen {
  id           String   @id @default(uuid())
  screenNumber Int
  theaterId    String
  layout       Json
  seats        Seat[]
  shows        Show[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  theater Theater @relation(fields: [theaterId], references: [id])
}

model Seat {
  id        String   @id @default(uuid())
  screenId  String
  number    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  screen   Screen     @relation(fields: [screenId], references: [id])
  ShowSeat ShowSeat[]
}

model Show {
  id           String     @id @default(uuid())
  movieId      String
  theaterId    String
  screenId     String
  screenNumber Int
  adultPrice   Float
  childPrice   Float
  startTime    DateTime
  endTime      DateTime
  showSeats    ShowSeat[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  theater Theater @relation(fields: [theaterId], references: [id])
  screen  Screen  @relation(fields: [screenId], references: [id])
}

model ShowSeat {
  id        String     @id @default(uuid())
  showId    String
  seatId    String
  status    SeatStatus
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  show Show @relation(fields: [showId], references: [id])
  seat Seat @relation(fields: [seatId], references: [id])
}

enum SeatStatus {
  AVAILABLE
  BOOKED
  LOCKED
}
